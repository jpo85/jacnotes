# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # setup di Python per script (convertire Markdown in HTML)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      # Libreria Python per convertire Markdown in HTML
      - name: Install dependencies
        run: |
          pip install markdown
      # Trova l'ultimo file Markdown modificato nel commit
      - name: find latest md
        run: |
          latest_md_file=$(git diff --name-only HEAD~1 HEAD | grep '^markdown/.*\.md$' || true)
          if [ -z "$latest_md_file" ]; then
            echo "No Markdown files were modified in the last commit."
            exit 0
          fi
          echo latest_md_file
      # Step 4: converti file *md in *html con style1.css
      - name: Convert Markdown to HTML
        run: |
          for file in $(find ./markdown -name '*.md'); do
            base_name=$(basename "$file" .md)
            output_file="./articles/$base_name.html"
            python3 md_to_html.py "$file" "$output_file"
          done
      # Step 4: Update articles.html con nuovo link dell'articolo
      #- name: Update articles.html
      #  run: |
      #    filename=$(basename "$latest_file" .html)
      #    article_title=$(head -n 1 "./markdown/${filename}.md" | sed 's/# //')
      #    new_link="<li><a href=\"${latest_file}\">${article_title}</a></li>"
      #    sed -i "/<!-- ARTICLES_PLACEHOLDER -->/a ${new_link}" ./articoli.html
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
