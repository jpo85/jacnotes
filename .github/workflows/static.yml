# Workflow semplice per il deployment di contenuti statici su GitHub Pages
name: Deploy static content to Pages

on:
  # Si attiva sui push al branch di default
  push:
    branches: ["main"]

  # Consente di eseguire questo workflow manualmente dalla scheda Actions
  workflow_dispatch:

# Imposta i permessi del GITHUB_TOKEN per consentire il deployment su GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Consente solo un deployment concorrente, saltando le esecuzioni in coda tra quella in corso e l'ultima in coda.
# Tuttavia, NON annulla le esecuzioni in corso poich√© vogliamo consentire il completamento di questi deployment in produzione.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job singolo per il deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Effettua il checkout del codice del repository
      - name: Checkout
        uses: actions/checkout@v4

      # Installa pandoc per la conversione dei file markdown in HTML
      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      # Converte i file markdown nella cartella "markdown" e copia gli HTML nella cartella "articles"
      - name: Convert Markdown to HTML and Move to Articles
        run: |
          mkdir -p articles
          for file in markdown/*.md; do
            [ -f "$file" ] || continue  # Salta se non ci sono file
            pandoc "$file" -o "articles/$(basename "${file%.md}.html")"
          done

      # Configura GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Carica l'intero repository come artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'  # Carica l'intero repository

      # Effettua il deployment dell'artifact su GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4